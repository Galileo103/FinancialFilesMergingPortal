#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinancialFilesMergingPortal.Services.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DatabaseForTask")]
	public partial class LinqToSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInputFinancialFile(InputFinancialFile instance);
    partial void UpdateInputFinancialFile(InputFinancialFile instance);
    partial void DeleteInputFinancialFile(InputFinancialFile instance);
    partial void InsertInputFinancialFilesBatch(InputFinancialFilesBatch instance);
    partial void UpdateInputFinancialFilesBatch(InputFinancialFilesBatch instance);
    partial void DeleteInputFinancialFilesBatch(InputFinancialFilesBatch instance);
    partial void InsertOutputFinancialFile(OutputFinancialFile instance);
    partial void UpdateOutputFinancialFile(OutputFinancialFile instance);
    partial void DeleteOutputFinancialFile(OutputFinancialFile instance);
    #endregion
		
		public LinqToSQLDataContext() : 
				base(global::FinancialFilesMergingPortal.Services.Properties.Settings.Default.DatabaseForTaskConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InputFinancialFile> InputFinancialFiles
		{
			get
			{
				return this.GetTable<InputFinancialFile>();
			}
		}
		
		public System.Data.Linq.Table<InputFinancialFilesBatch> InputFinancialFilesBatches
		{
			get
			{
				return this.GetTable<InputFinancialFilesBatch>();
			}
		}
		
		public System.Data.Linq.Table<OutputFinancialFile> OutputFinancialFiles
		{
			get
			{
				return this.GetTable<OutputFinancialFile>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InputFinancialFile")]
	public partial class InputFinancialFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FUN;
		
		private int _DateTime;
		
		private int _TotalCreditCount;
		
		private int _TotalCreditAmount;
		
		private int _TotalDebitCount;
		
		private int _TotalDebitAmount;
		
		private string _FileName;
		
		private string _PhysicalLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFUNChanging(int value);
    partial void OnFUNChanged();
    partial void OnDateTimeChanging(int value);
    partial void OnDateTimeChanged();
    partial void OnTotalCreditCountChanging(int value);
    partial void OnTotalCreditCountChanged();
    partial void OnTotalCreditAmountChanging(int value);
    partial void OnTotalCreditAmountChanged();
    partial void OnTotalDebitCountChanging(int value);
    partial void OnTotalDebitCountChanged();
    partial void OnTotalDebitAmountChanging(int value);
    partial void OnTotalDebitAmountChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnPhysicalLocationChanging(string value);
    partial void OnPhysicalLocationChanged();
    #endregion
		
		public InputFinancialFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUN", DbType="Int NOT NULL")]
		public int FUN
		{
			get
			{
				return this._FUN;
			}
			set
			{
				if ((this._FUN != value))
				{
					this.OnFUNChanging(value);
					this.SendPropertyChanging();
					this._FUN = value;
					this.SendPropertyChanged("FUN");
					this.OnFUNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="Int NOT NULL")]
		public int DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCreditCount", DbType="Int NOT NULL")]
		public int TotalCreditCount
		{
			get
			{
				return this._TotalCreditCount;
			}
			set
			{
				if ((this._TotalCreditCount != value))
				{
					this.OnTotalCreditCountChanging(value);
					this.SendPropertyChanging();
					this._TotalCreditCount = value;
					this.SendPropertyChanged("TotalCreditCount");
					this.OnTotalCreditCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCreditAmount", DbType="Int NOT NULL")]
		public int TotalCreditAmount
		{
			get
			{
				return this._TotalCreditAmount;
			}
			set
			{
				if ((this._TotalCreditAmount != value))
				{
					this.OnTotalCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalCreditAmount = value;
					this.SendPropertyChanged("TotalCreditAmount");
					this.OnTotalCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebitCount", DbType="Int NOT NULL")]
		public int TotalDebitCount
		{
			get
			{
				return this._TotalDebitCount;
			}
			set
			{
				if ((this._TotalDebitCount != value))
				{
					this.OnTotalDebitCountChanging(value);
					this.SendPropertyChanging();
					this._TotalDebitCount = value;
					this.SendPropertyChanged("TotalDebitCount");
					this.OnTotalDebitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebitAmount", DbType="Int NOT NULL")]
		public int TotalDebitAmount
		{
			get
			{
				return this._TotalDebitAmount;
			}
			set
			{
				if ((this._TotalDebitAmount != value))
				{
					this.OnTotalDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalDebitAmount = value;
					this.SendPropertyChanged("TotalDebitAmount");
					this.OnTotalDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalLocation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhysicalLocation
		{
			get
			{
				return this._PhysicalLocation;
			}
			set
			{
				if ((this._PhysicalLocation != value))
				{
					this.OnPhysicalLocationChanging(value);
					this.SendPropertyChanging();
					this._PhysicalLocation = value;
					this.SendPropertyChanged("PhysicalLocation");
					this.OnPhysicalLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InputFinancialFilesBatch")]
	public partial class InputFinancialFilesBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CreationDateTime;
		
		private string _UserName;
		
		private string _Status;
		
		private string _ErrorDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreationDateTimeChanging(int value);
    partial void OnCreationDateTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnErrorDescriptionChanging(string value);
    partial void OnErrorDescriptionChanged();
    #endregion
		
		public InputFinancialFilesBatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDateTime", DbType="Int NOT NULL")]
		public int CreationDateTime
		{
			get
			{
				return this._CreationDateTime;
			}
			set
			{
				if ((this._CreationDateTime != value))
				{
					this.OnCreationDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationDateTime = value;
					this.SendPropertyChanged("CreationDateTime");
					this.OnCreationDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ErrorDescription
		{
			get
			{
				return this._ErrorDescription;
			}
			set
			{
				if ((this._ErrorDescription != value))
				{
					this.OnErrorDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ErrorDescription = value;
					this.SendPropertyChanged("ErrorDescription");
					this.OnErrorDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutputFinancialFile")]
	public partial class OutputFinancialFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FUN;
		
		private int _DateTime;
		
		private int _TotalCreditCount;
		
		private int _TotalCreditAmount;
		
		private int _TotalDebitCount;
		
		private int _TotalDebitAmount;
		
		private string _PhysicalDirectory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFUNChanging(int value);
    partial void OnFUNChanged();
    partial void OnDateTimeChanging(int value);
    partial void OnDateTimeChanged();
    partial void OnTotalCreditCountChanging(int value);
    partial void OnTotalCreditCountChanged();
    partial void OnTotalCreditAmountChanging(int value);
    partial void OnTotalCreditAmountChanged();
    partial void OnTotalDebitCountChanging(int value);
    partial void OnTotalDebitCountChanged();
    partial void OnTotalDebitAmountChanging(int value);
    partial void OnTotalDebitAmountChanged();
    partial void OnPhysicalDirectoryChanging(string value);
    partial void OnPhysicalDirectoryChanged();
    #endregion
		
		public OutputFinancialFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUN", DbType="Int NOT NULL")]
		public int FUN
		{
			get
			{
				return this._FUN;
			}
			set
			{
				if ((this._FUN != value))
				{
					this.OnFUNChanging(value);
					this.SendPropertyChanging();
					this._FUN = value;
					this.SendPropertyChanged("FUN");
					this.OnFUNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="Int NOT NULL")]
		public int DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCreditCount", DbType="Int NOT NULL")]
		public int TotalCreditCount
		{
			get
			{
				return this._TotalCreditCount;
			}
			set
			{
				if ((this._TotalCreditCount != value))
				{
					this.OnTotalCreditCountChanging(value);
					this.SendPropertyChanging();
					this._TotalCreditCount = value;
					this.SendPropertyChanged("TotalCreditCount");
					this.OnTotalCreditCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCreditAmount", DbType="Int NOT NULL")]
		public int TotalCreditAmount
		{
			get
			{
				return this._TotalCreditAmount;
			}
			set
			{
				if ((this._TotalCreditAmount != value))
				{
					this.OnTotalCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalCreditAmount = value;
					this.SendPropertyChanged("TotalCreditAmount");
					this.OnTotalCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebitCount", DbType="Int NOT NULL")]
		public int TotalDebitCount
		{
			get
			{
				return this._TotalDebitCount;
			}
			set
			{
				if ((this._TotalDebitCount != value))
				{
					this.OnTotalDebitCountChanging(value);
					this.SendPropertyChanging();
					this._TotalDebitCount = value;
					this.SendPropertyChanged("TotalDebitCount");
					this.OnTotalDebitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebitAmount", DbType="Int NOT NULL")]
		public int TotalDebitAmount
		{
			get
			{
				return this._TotalDebitAmount;
			}
			set
			{
				if ((this._TotalDebitAmount != value))
				{
					this.OnTotalDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalDebitAmount = value;
					this.SendPropertyChanged("TotalDebitAmount");
					this.OnTotalDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalDirectory", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhysicalDirectory
		{
			get
			{
				return this._PhysicalDirectory;
			}
			set
			{
				if ((this._PhysicalDirectory != value))
				{
					this.OnPhysicalDirectoryChanging(value);
					this.SendPropertyChanging();
					this._PhysicalDirectory = value;
					this.SendPropertyChanged("PhysicalDirectory");
					this.OnPhysicalDirectoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
